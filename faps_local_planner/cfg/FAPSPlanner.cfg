#!/usr/bin/env python
# FAPS Planner configuration

PACKAGE = "faps_local_planner"
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("acc_lim_theta", double_t, 0, "Accuracy of the orientation to the goal orientation.", 1.0, 0, 5)

gen.add("max_vel_theta", double_t, 0, "The absolute value of the maximum rotational velocity for the robot in rad/s.", 1.0, 0, 20.0)

gen.add("min_vel_theta", double_t, 0, "The absolute value of the minimum rotational velocity for the robot in rad/s.", -0.5, -1.0, 20.0)

gen.add("max_vel_x", double_t, 0, "The maximum x velocity for the robot in m/s.", 0.05, 0, 20.0)

gen.add("restore_defaults", bool_t, 0, "Restore to the original configuration.", False)

gen.add("acc_lim_x", double_t, 0, "The acceleration limit of the robot in the x direction.", 0.1, 0, 10.0)

gen.add("slow_down_factor", double_t, 0, "Factor to scale when the robot should slow down by in place rotation.", 1, 0, 10.0)

gen.add("local_planner_frequence", double_t, 0, "Need to set to the same value as the local planner frequence (controller frequence) in move base.", 10, 0, 100.0)

gen.add("safe_distance", double_t, 0, "the safe distance to avoid collision", 1.0, 0.1, 2)

gen.add("circle_radius", double_t, 0, "check the next waypoint outside this circle", 0.5, 0.1, 5)

#gen.add("position_accuracy", double_t, 0, "Maximal distance to the goal position.", 0.3, 0, 0.5)
#gen.add("acceleration_z", double_t, 0, "The acceleration limit of the robot for rotation.", 0.1, 0, 10.0)


exit(gen.generate(PACKAGE, "faps_local_planner", "FAPSPlanner"))
